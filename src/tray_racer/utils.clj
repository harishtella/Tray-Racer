;; utils.clj 
;; ----------------------------------
;; some misc utils functions

(ns tray-racer.utils)


(defn map-to-range [t [r1 r2]]
  {:pre [(and (>= t 0) (<= t 1))]
   :post [(number? %)]}

  "Maps t, a value between 0 and 1, 
  to a value between r1 and r2."

  (+ r1 (* t (- r2 r1))))


(defn iterate-until-end [f x] 
  "Generates a lazy sequence that starts with x
  and with subsequent terms generated by applying
  f to the last term. If f applied to the last term 
  returns nil then the sequence ends with the last 
  term."

  (let [next-x (f x)]
    (if (= next-x nil)
      (list x)
      (cons x (lazy-seq (iterate-until-end f next-x))))))

 
(defn do-one [todos]
  "Takes in an atom containing a list to be evaluated for its
  side-effects.  do-one evaluates the first item of this
  list and then sets the atom to contain the rest of the
  unevaluated list."

  (let [t (first @todos)]
    (swap! todos rest)))

